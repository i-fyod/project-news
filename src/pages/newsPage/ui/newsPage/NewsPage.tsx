import { newsPostRoute } from "@/app/routes";
import { useNewsStore } from "@/app/store";

import { useEffect } from "react";

import { grayColor } from "@/shared/const";
import { formatTimeAgo, useColor } from "@/shared/lib";
import { BackIcon, Button, Subtitle, Title } from "@/shared/ui";

import styles from "./styles.module.sass";

export function NewsPage() {
    const { postId } = newsPostRoute.useParams();
    const news = useNewsStore().posts[postId];
    const color = useColor();

    useEffect(() => {
        if (news) {
            const imgContainer = document.querySelector(`.${styles.imgContainer}`) as HTMLElement;
            imgContainer!.style.setProperty("--bg-image", `url(${news.image})`);
        }
    }, [news]);

    return !news || Object.keys(news).length === 0 ? (
        <div className={`${styles.newsPage} ${styles.skeleton}`}>
            <section className={`container ${styles.newsPage__buttons}`}>
                <Button outline={true}>
                    <BackIcon />
                </Button>
            </section>
            <div className={`${styles.imgContainer}`}></div>
            <section className={`${styles.newsPage__content} ${styles.contentContainer}`}>
                <section className="container">
                    <div className={styles.contentContainer__title}></div>
                    <section
                        className={`${styles.contentContainer__author} ${styles.authorContainer}`}>
                        <div className={styles.authorContainer__avatar}> </div>
                        <p className={styles.authorContainer__text}></p>
                        <p className={styles.authorContainer__link}></p>
                    </section>
                    <div className={styles.contentContainer__text}></div>
                </section>
            </section>
        </div>
    ) : (
        <div className={styles.newsPage}>
            <div className={`container ${styles.newsPage__buttons}`}>
                <Button outline={true} onClick={() => window.history.back()}>
                    <BackIcon />
                </Button>
            </div>
            <div className={`${styles.newsPage__image} ${styles.imgContainer}`}>
                {news.image !== "None" ? (
                    <img src={news.image} alt="" className={styles.imgContainer__image} />
                ) : (
                    <svg
                        className={styles.imgContainer__image}
                        style={{ transform: "scale(0.7) translateY(-2rem)" }}
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <g id="SVGRepo_iconCarrier">
                            {" "}
                            <path
                                d="M3.28034 2.21968C2.98745 1.92678 2.51257 1.92677 2.21968 2.21966C1.92678 2.51255 1.92677 2.98743 2.21966 3.28032L3.48327 4.54395C3.17684 5.03983 3 5.62427 3 6.25001V17.75C3 19.5449 4.45507 21 6.25 21H17.75C18.3757 21 18.96 20.8232 19.4559 20.5169L20.7194 21.7805C21.0123 22.0734 21.4872 22.0734 21.7801 21.7805C22.073 21.4876 22.073 21.0127 21.7801 20.7198L3.28034 2.21968ZM12.0681 13.1289L18.2739 19.3349C18.2929 19.3572 18.3118 19.3794 18.3305 19.4014C18.1489 19.4653 17.9535 19.5 17.75 19.5H6.25C6.04613 19.5 5.8504 19.4651 5.66845 19.4011L11.4752 13.7148L12.0681 13.1289ZM11.1189 12.1797C10.8678 12.2865 10.6322 12.4409 10.4258 12.643L4.60326 18.3437C4.53643 18.1583 4.5 17.9584 4.5 17.75V6.25001C4.5 6.04371 4.5357 5.84575 4.60125 5.66196L11.1189 12.1797Z"
                                fill={color}></path>{" "}
                            <path
                                d="M19.5 16.3183V6.25001C19.5 5.28351 18.7165 4.50001 17.75 4.50001H7.68194L6.18265 3.00069C6.20505 3.00024 6.2275 3.00001 6.25 3.00001H17.75C19.5449 3.00001 21 4.45508 21 6.25001V17.75C21 17.7726 20.9998 17.7952 20.9993 17.8176L19.5 16.3183Z"
                                fill={color}></path>{" "}
                            <path
                                d="M15.2521 6.50001C16.4959 6.50001 17.5042 7.50832 17.5042 8.75212C17.5042 9.99593 16.4959 11.0042 15.2521 11.0042C14.0083 11.0042 13 9.99593 13 8.75212C13 7.50832 14.0083 6.50001 15.2521 6.50001ZM15.2521 8.00001C14.8367 8.00001 14.5 8.33674 14.5 8.75212C14.5 9.16751 14.8367 9.50424 15.2521 9.50424C15.6675 9.50424 16.0042 9.16751 16.0042 8.75212C16.0042 8.33674 15.6675 8.00001 15.2521 8.00001Z"
                                fill={color}></path>{" "}
                        </g>
                    </svg>
                )}
            </div>
            <div className={`${styles.newsPage__content} ${styles.contentContainer}`}>
                <div className="container">
                    <Title className={styles.contentContainer__title}>{news.title}</Title>
                    <div className={`${styles.contentContainer__author} ${styles.authorContainer}`}>
                        <svg
                            className={styles.authorContainer__avatar}
                            width="31"
                            height="35"
                            viewBox="0 0 31 35"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M29.0411 28.8376C28.1555 27.2521 26.8007 26.1483 25.4969 25.3677C24.1924 24.5876 22.9195 24.1233 22.1745 23.8459C21.6069 23.6367 21.0075 23.3654 20.5958 23.0776C20.3897 22.9356 20.2336 22.79 20.1471 22.6716C20.0585 22.5502 20.0409 22.4757 20.0402 22.4165C20.0402 21.853 20.0402 21.1484 20.0402 20.2054C20.1222 19.9996 20.208 19.8319 20.3049 19.6759C20.469 19.4085 20.6875 19.1381 20.9068 18.7315C21.0888 18.3925 21.2512 17.9657 21.3767 17.4071C21.4871 17.3538 21.5972 17.2921 21.7045 17.2176C22.0337 16.9921 22.3122 16.6635 22.5399 16.2337C22.7701 15.8019 22.9688 15.2606 23.1806 14.5274L23.1788 14.5323L23.1806 14.5268C23.2895 14.1464 23.3417 13.8123 23.3419 13.5084C23.3457 13.0199 23.1918 12.5965 22.9372 12.3107C22.8485 12.2096 22.7525 12.1331 22.656 12.0669C22.6881 11.6909 22.746 11.192 22.8009 10.6167C22.8646 9.94912 22.922 9.18574 22.922 8.39522C22.9195 7.14432 22.7853 5.82341 22.252 4.68356C21.9847 4.11508 21.6099 3.59211 21.0979 3.1791C20.6263 2.79766 20.0374 2.52425 19.3542 2.3802C18.8905 2.02738 18.4416 1.71852 17.8819 1.50383C17.2778 1.27148 16.5805 1.1639 15.6593 1.16442C15.3687 1.16442 15.0542 1.17473 14.7101 1.19549C13.7485 1.1998 12.9612 1.31582 12.2009 1.31382C11.6706 1.31331 11.1473 1.26297 10.5409 1.09172L10.2161 1L9.95725 1.21514C9.16094 1.88623 8.73353 2.88641 8.47205 3.99765C8.2137 5.11385 8.12998 6.36862 8.1292 7.61263C8.12946 9.23608 8.27566 10.8397 8.39996 12.0433C8.30521 12.1044 8.21103 12.175 8.12173 12.2692C7.84727 12.5545 7.67522 12.9956 7.67996 13.5073C7.68022 13.8108 7.73244 14.1448 7.84129 14.5248L7.84181 14.5268C8.12472 15.5038 8.38054 16.1438 8.72664 16.6293C8.89914 16.8706 9.09957 17.068 9.31734 17.2175C9.42424 17.2915 9.53361 17.3527 9.6435 17.406C9.84061 18.2419 10.1726 18.8478 10.4572 19.2864C10.6173 19.5347 10.7588 19.732 10.8462 19.8795C10.93 20.0177 10.9549 20.0967 10.9599 20.1327C10.9599 21.1142 10.9599 21.8376 10.9599 22.4164C10.9602 22.4623 10.942 22.5432 10.8435 22.673C10.7008 22.8649 10.3895 23.1097 10.0164 23.317C9.64395 23.5277 9.21362 23.7103 8.83699 23.842C7.82291 24.1983 5.89887 24.8935 4.19538 26.2471C3.34367 26.9245 2.54411 27.7723 1.95615 28.8312C1.36793 29.8892 0.998704 31.1583 1 32.6332C1 32.8893 1.01098 33.1523 1.03358 33.4212L1.08229 34H29.9177L29.9664 33.4212C29.989 33.1528 30 32.8908 30 32.6347C30.0012 31.1603 29.631 29.893 29.0411 28.8376ZM28.7226 32.7368H2.27737C2.27686 32.7028 2.27289 32.6667 2.27289 32.6332C2.27387 31.3645 2.58165 30.3249 3.07115 29.4406C3.80434 28.1172 4.97032 27.1401 6.15443 26.4315C7.33756 25.7229 8.52193 25.2912 9.26005 25.0332C9.84158 24.8289 10.517 24.5333 11.0923 24.1371C11.38 23.9377 11.6448 23.7132 11.8575 23.4364C12.0676 23.163 12.2325 22.8162 12.2327 22.4164C12.2327 21.8267 12.2327 21.09 12.2327 20.0795V20.0469L12.2292 20.0143C12.1946 19.6985 12.0681 19.4493 11.9405 19.2347C11.7448 18.9109 11.5249 18.6292 11.3237 18.2641C11.1234 17.9004 10.9367 17.4613 10.8258 16.843L10.7614 16.4818L10.4133 16.3584C10.2542 16.3017 10.1403 16.2469 10.0443 16.1808C9.90315 16.0811 9.77242 15.9479 9.60635 15.6414C9.44275 15.337 9.26304 14.8682 9.06586 14.1803V14.1799C8.98111 13.8868 8.95272 13.6647 8.95272 13.5073C8.95773 13.2369 9.01832 13.1733 9.05118 13.1323C9.08645 13.0928 9.14938 13.0627 9.2192 13.0474L9.77261 12.9245L9.71319 12.365C9.58264 11.1373 9.40196 9.36582 9.40196 7.61257C9.40144 6.42779 9.4862 5.25191 9.71221 4.28131C9.89971 3.46166 10.1938 2.81036 10.5598 2.39586C11.1477 2.52902 11.6922 2.57743 12.2008 2.57697C13.0981 2.57504 13.8817 2.45554 14.7446 2.45754H14.765L14.7866 2.45658C15.1101 2.43685 15.3995 2.42744 15.6592 2.42744C16.4876 2.42789 17.004 2.52167 17.4231 2.68203C17.8418 2.84239 18.2003 3.08667 18.685 3.46121L18.8099 3.55737L18.9652 3.58451C19.5338 3.68563 19.955 3.88653 20.2948 4.15936C20.8013 4.5669 21.1423 5.16844 21.3574 5.91455C21.5717 6.6577 21.6497 7.5291 21.649 8.39509C21.6493 9.12445 21.5956 9.84974 21.5337 10.4977C21.4718 11.1465 21.4022 11.7125 21.371 12.1546H21.3713C21.3656 12.2331 21.3586 12.3007 21.3507 12.3767L21.2942 12.9151L21.8215 13.0527C21.8889 13.0705 21.9421 13.0991 21.9759 13.1386C22.0075 13.1796 22.0649 13.2506 22.0689 13.5082C22.0689 13.6651 22.0406 13.8867 21.9568 14.1783L21.9563 14.1798C21.694 15.0986 21.4591 15.6226 21.2595 15.8955C21.1593 16.0332 21.0733 16.1136 20.9773 16.1807C20.8813 16.2468 20.7674 16.3016 20.6084 16.3583L20.2603 16.4817L20.1959 16.8429C20.12 17.2687 20.0289 17.5757 19.9326 17.8165C19.7874 18.1767 19.6315 18.3997 19.4306 18.6943C19.2318 18.9849 18.9921 19.3466 18.8049 19.8653L18.7671 19.9689V20.0794C18.7671 21.09 18.7671 21.8267 18.7671 22.4164C18.7664 22.8022 18.9183 23.1482 19.1216 23.4201C19.4301 23.831 19.8518 24.1282 20.3075 24.3877C20.7642 24.6448 21.2612 24.8555 21.7283 25.0292C22.7162 25.3938 24.4976 26.0541 26.0041 27.2492C26.7569 27.8458 27.4368 28.5696 27.9274 29.4494C28.4174 30.3307 28.7259 31.367 28.7268 32.6346C28.7271 32.6677 28.7231 32.7032 28.7226 32.7368Z"
                                fill={grayColor}
                                stroke={grayColor}
                                strokeWidth="0.7"
                            />
                        </svg>
                        <Subtitle className={styles.authorContainer__text}>
                            {`${news.author} · ${formatTimeAgo(news.published)}`}
                        </Subtitle>
                        <a href={news.url} className={styles.authorContainer__link}>
                            Read More
                        </a>
                    </div>
                    <p className={styles.contentContainer__text}>{news.description}</p>
                </div>
            </div>
        </div>
    );
}
